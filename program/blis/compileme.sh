#!/bin/bash

# Operations to test.
l2_ops="gemv ger hemv her her2 trmv trsv"
l3_ops="gemm hemm herk her2k trmm trsm"
test_ops="${l2_ops} ${l3_ops}"

# Implementations to test.
test_impls="blis"

for im in ${test_impls}; do

	for op in ${test_ops}; do

		echo "$CK_CC $CK_FLAGS_CREATE_OBJ $CK_COMPILER_FLAGS_OBLIGATORY $CK_FLAGS_DYNAMIC_BIN ${CK_FLAG_PREFIX_INCLUDE}../ ${CK_FLAG_PREFIX_VAR}BLIS="" ${CK_FLAG_PREFIX_VAR}BLIS_VERSION_STRING=0.8.0-9 ${CK_FLAG_PREFIX_VAR}XOPENME="" ${CK_FLAG_PREFIX_VAR}POSIX_C_SOURCE=200112L ${CK_FLAG_PREFIX_VAR}CK_HOST_OS_NAME2_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_HOST_OS_NAME_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_TARGET_OS_NAME2_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_TARGET_OS_NAME_LINUX=1 ${CK_FLAG_PREFIX_INCLUDE}${CK_ENV_LIB_RTL_XOPENME_INCLUDE} ${CK_FLAG_PREFIX_INCLUDE}${CK_ENV_LIB_BLIS_INCLUDE} ../test_${op}.c  ${CK_FLAGS_OUTPUT}test_${op}.o"
        $CK_CC $CK_FLAGS_CREATE_OBJ $CK_COMPILER_FLAGS_OBLIGATORY $CK_FLAGS_DYNAMIC_BIN ${CK_FLAG_PREFIX_INCLUDE}../ ${CK_FLAG_PREFIX_VAR}BLIS="" ${CK_FLAG_PREFIX_VAR}BLIS_VERSION_STRING=0.8.0-9 ${CK_FLAG_PREFIX_VAR}XOPENME="" ${CK_FLAG_PREFIX_VAR}POSIX_C_SOURCE=200112L ${CK_FLAG_PREFIX_VAR}CK_HOST_OS_NAME2_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_HOST_OS_NAME_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_TARGET_OS_NAME2_LINUX=1 ${CK_FLAG_PREFIX_VAR}CK_TARGET_OS_NAME_LINUX=1 ${CK_FLAG_PREFIX_INCLUDE}${CK_ENV_LIB_RTL_XOPENME_INCLUDE} ${CK_FLAG_PREFIX_INCLUDE}${CK_ENV_LIB_BLIS_INCLUDE} ../test_${op}.c  ${CK_FLAGS_OUTPUT}test_${op}.o
        er=$?; if [ $er != 0 ]; then exit $er; fi

        echo "$CK_CC $CK_COMPILER_FLAGS_OBLIGATORY  $CK_FLAGS_DYNAMIC_BIN test_${op}.o  ${CK_FLAGS_OUTPUT}test_${op}.out ${CK_FLAG_PREFIX_LIB_DIR}${LD_LIBRARY_PATH} $CK_LD_FLAGS_MISC $CK_LD_FLAGS_EXTRA $CK_EXTRA_LIB_M -lblis -lrtlxopenme"
        $CK_CC $CK_COMPILER_FLAGS_OBLIGATORY  $CK_FLAGS_DYNAMIC_BIN test_${op}.o  ${CK_FLAGS_OUTPUT}test_${op}.out ${CK_FLAG_PREFIX_LIB_DIR}${LD_LIBRARY_PATH} $CK_LD_FLAGS_MISC $CK_LD_FLAGS_EXTRA $CK_EXTRA_LIB_M -lblis -lrtlxopenme
        er=$?; if [ $er != 0 ]; then exit $er; fi

        printf "\n"


	done
done