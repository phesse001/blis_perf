
test.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 42 2f 00 00    	pushq  0x2f42(%rip)        # 3f68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 43 2f 00 00 	bnd jmpq *0x2f43(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	pushq  $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmpq 1020 <.plt>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	pushq  $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmpq 1020 <.plt>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	pushq  $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmpq 1020 <.plt>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	pushq  $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmpq 1020 <.plt>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	pushq  $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmpq 1020 <.plt>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	pushq  $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmpq 1020 <.plt>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	pushq  $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmpq 1020 <.plt>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	pushq  $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmpq 1020 <.plt>
    10ef:	90                   	nop

Disassembly of section .plt.got:

00000000000010f0 <__cxa_finalize@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 fd 2e 00 00 	bnd jmpq *0x2efd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001100 <puts@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 6d 2e 00 00 	bnd jmpq *0x2e6d(%rip)        # 3f78 <puts@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <bli_randm@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 65 2e 00 00 	bnd jmpq *0x2e65(%rip)        # 3f80 <bli_randm>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 5d 2e 00 00 	bnd jmpq *0x2e5d(%rip)        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <bli_obj_free@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 55 2e 00 00 	bnd jmpq *0x2e55(%rip)        # 3f90 <bli_obj_free>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <bli_gemm@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 4d 2e 00 00 	bnd jmpq *0x2e4d(%rip)        # 3f98 <bli_gemm>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <bli_clock_min_diff@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 45 2e 00 00 	bnd jmpq *0x2e45(%rip)        # 3fa0 <bli_clock_min_diff>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <bli_copym@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 3d 2e 00 00 	bnd jmpq *0x2e3d(%rip)        # 3fa8 <bli_copym>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__printf_chk@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 35 2e 00 00 	bnd jmpq *0x2e35(%rip)        # 3fb0 <__printf_chk@GLIBC_2.3.4>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <bli_obj_create@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 2d 2e 00 00 	bnd jmpq *0x2e2d(%rip)        # 3fb8 <bli_obj_create>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <bli_param_map_blis_to_netlib_trans@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 25 2e 00 00 	bnd jmpq *0x2e25(%rip)        # 3fc0 <bli_param_map_blis_to_netlib_trans>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <bli_setsc@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 1d 2e 00 00 	bnd jmpq *0x2e1d(%rip)        # 3fc8 <bli_setsc>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <bli_clock@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 15 2e 00 00 	bnd jmpq *0x2e15(%rip)        # 3fd0 <bli_clock>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011c0 <main>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	41 57                	push   %r15
    11c6:	31 ff                	xor    %edi,%edi
    11c8:	41 56                	push   %r14
    11ca:	41 55                	push   %r13
    11cc:	41 54                	push   %r12
    11ce:	55                   	push   %rbp
    11cf:	53                   	push   %rbx
    11d0:	bb d0 07 00 00       	mov    $0x7d0,%ebx
    11d5:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    11dc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11e3:	00 00 
    11e5:	48 89 84 24 f8 03 00 	mov    %rax,0x3f8(%rsp)
    11ec:	00 
    11ed:	31 c0                	xor    %eax,%eax
    11ef:	48 8d 74 24 2e       	lea    0x2e(%rsp),%rsi
    11f4:	4c 8d bc 24 50 03 00 	lea    0x350(%rsp),%r15
    11fb:	00 
    11fc:	e8 8f ff ff ff       	callq  1190 <bli_param_map_blis_to_netlib_trans@plt>
    1201:	48 8d 74 24 2f       	lea    0x2f(%rsp),%rsi
    1206:	31 ff                	xor    %edi,%edi
    1208:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    120d:	e8 7e ff ff ff       	callq  1190 <bli_param_map_blis_to_netlib_trans@plt>
    1212:	48 8d 3d eb 0d 00 00 	lea    0xdeb(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1219:	4c 8d ac 24 d0 00 00 	lea    0xd0(%rsp),%r13
    1220:	00 
    1221:	e8 da fe ff ff       	callq  1100 <puts@plt>
    1226:	48 8d 84 24 b0 02 00 	lea    0x2b0(%rsp),%rax
    122d:	00 
    122e:	48 8d ac 24 70 01 00 	lea    0x170(%rsp),%rbp
    1235:	00 
    1236:	48 89 04 24          	mov    %rax,(%rsp)
    123a:	4c 8d a4 24 10 02 00 	lea    0x210(%rsp),%r12
    1241:	00 
    1242:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1248:	4c 8b 0c 24          	mov    (%rsp),%r9
    124c:	45 31 c0             	xor    %r8d,%r8d
    124f:	31 c9                	xor    %ecx,%ecx
    1251:	ba 01 00 00 00       	mov    $0x1,%edx
    1256:	be 01 00 00 00       	mov    $0x1,%esi
    125b:	bf 02 00 00 00       	mov    $0x2,%edi
    1260:	e8 1b ff ff ff       	callq  1180 <bli_obj_create@plt>
    1265:	4d 89 f9             	mov    %r15,%r9
    1268:	45 31 c0             	xor    %r8d,%r8d
    126b:	31 c9                	xor    %ecx,%ecx
    126d:	ba 01 00 00 00       	mov    $0x1,%edx
    1272:	be 01 00 00 00       	mov    $0x1,%esi
    1277:	bf 02 00 00 00       	mov    $0x2,%edi
    127c:	e8 ff fe ff ff       	callq  1180 <bli_obj_create@plt>
    1281:	4d 89 f1             	mov    %r14,%r9
    1284:	45 31 c0             	xor    %r8d,%r8d
    1287:	31 c9                	xor    %ecx,%ecx
    1289:	48 89 da             	mov    %rbx,%rdx
    128c:	48 89 de             	mov    %rbx,%rsi
    128f:	bf 02 00 00 00       	mov    $0x2,%edi
    1294:	e8 e7 fe ff ff       	callq  1180 <bli_obj_create@plt>
    1299:	4d 89 e9             	mov    %r13,%r9
    129c:	45 31 c0             	xor    %r8d,%r8d
    129f:	31 c9                	xor    %ecx,%ecx
    12a1:	48 89 da             	mov    %rbx,%rdx
    12a4:	48 89 de             	mov    %rbx,%rsi
    12a7:	bf 02 00 00 00       	mov    $0x2,%edi
    12ac:	e8 cf fe ff ff       	callq  1180 <bli_obj_create@plt>
    12b1:	49 89 e9             	mov    %rbp,%r9
    12b4:	45 31 c0             	xor    %r8d,%r8d
    12b7:	31 c9                	xor    %ecx,%ecx
    12b9:	48 89 da             	mov    %rbx,%rdx
    12bc:	48 89 de             	mov    %rbx,%rsi
    12bf:	bf 02 00 00 00       	mov    $0x2,%edi
    12c4:	e8 b7 fe ff ff       	callq  1180 <bli_obj_create@plt>
    12c9:	48 89 da             	mov    %rbx,%rdx
    12cc:	4d 89 e1             	mov    %r12,%r9
    12cf:	45 31 c0             	xor    %r8d,%r8d
    12d2:	31 c9                	xor    %ecx,%ecx
    12d4:	48 89 de             	mov    %rbx,%rsi
    12d7:	bf 02 00 00 00       	mov    $0x2,%edi
    12dc:	e8 9f fe ff ff       	callq  1180 <bli_obj_create@plt>
    12e1:	4c 89 f7             	mov    %r14,%rdi
    12e4:	e8 27 fe ff ff       	callq  1110 <bli_randm@plt>
    12e9:	4c 89 ef             	mov    %r13,%rdi
    12ec:	e8 1f fe ff ff       	callq  1110 <bli_randm@plt>
    12f1:	48 89 ef             	mov    %rbp,%rdi
    12f4:	e8 17 fe ff ff       	callq  1110 <bli_randm@plt>
    12f9:	48 8b 05 98 0d 00 00 	mov    0xd98(%rip),%rax        # 2098 <_IO_stdin_used+0x98>
    1300:	48 8b 3c 24          	mov    (%rsp),%rdi
    1304:	83 64 24 60 e7       	andl   $0xffffffe7,0x60(%rsp)
    1309:	66 48 0f 6e c8       	movq   %rax,%xmm1
    130e:	48 8b 05 8b 0d 00 00 	mov    0xd8b(%rip),%rax        # 20a0 <_IO_stdin_used+0xa0>
    1315:	83 a4 24 00 01 00 00 	andl   $0xffffffe7,0x100(%rsp)
    131c:	e7 
    131d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1322:	e8 79 fe ff ff       	callq  11a0 <bli_setsc@plt>
    1327:	48 8b 05 7a 0d 00 00 	mov    0xd7a(%rip),%rax        # 20a8 <_IO_stdin_used+0xa8>
    132e:	4c 89 ff             	mov    %r15,%rdi
    1331:	66 48 0f 6e c8       	movq   %rax,%xmm1
    1336:	48 8b 05 73 0d 00 00 	mov    0xd73(%rip),%rax        # 20b0 <_IO_stdin_used+0xb0>
    133d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1342:	e8 59 fe ff ff       	callq  11a0 <bli_setsc@plt>
    1347:	4c 89 e6             	mov    %r12,%rsi
    134a:	48 89 ef             	mov    %rbp,%rdi
    134d:	e8 0e fe ff ff       	callq  1160 <bli_copym@plt>
    1352:	48 8b 15 37 0d 00 00 	mov    0xd37(%rip),%rdx        # 2090 <_IO_stdin_used+0x90>
    1359:	b8 03 00 00 00       	mov    $0x3,%eax
    135e:	66 48 0f 6e d2       	movq   %rdx,%xmm2
    1363:	48 89 ee             	mov    %rbp,%rsi
    1366:	4c 89 e7             	mov    %r12,%rdi
    1369:	89 44 24 14          	mov    %eax,0x14(%rsp)
    136d:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
    1373:	e8 e8 fd ff ff       	callq  1160 <bli_copym@plt>
    1378:	e8 33 fe ff ff       	callq  11b0 <bli_clock@plt>
    137d:	48 8b 3c 24          	mov    (%rsp),%rdi
    1381:	49 89 e8             	mov    %rbp,%r8
    1384:	4c 89 f9             	mov    %r15,%rcx
    1387:	4c 89 ea             	mov    %r13,%rdx
    138a:	4c 89 f6             	mov    %r14,%rsi
    138d:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    1393:	e8 a8 fd ff ff       	callq  1140 <bli_gemm@plt>
    1398:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
    139e:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    13a4:	66 0f 28 c2          	movapd %xmm2,%xmm0
    13a8:	e8 a3 fd ff ff       	callq  1150 <bli_clock_min_diff@plt>
    13ad:	8b 44 24 14          	mov    0x14(%rsp),%eax
    13b1:	66 0f 28 d0          	movapd %xmm0,%xmm2
    13b5:	83 e8 01             	sub    $0x1,%eax
    13b8:	75 a9                	jne    1363 <main+0x1a3>
    13ba:	66 0f ef c9          	pxor   %xmm1,%xmm1
    13be:	31 c0                	xor    %eax,%eax
    13c0:	48 8d 35 47 0c 00 00 	lea    0xc47(%rip),%rsi        # 200e <_IO_stdin_used+0xe>
    13c7:	bf 01 00 00 00       	mov    $0x1,%edi
    13cc:	f2 48 0f 2a cb       	cvtsi2sd %rbx,%xmm1
    13d1:	f2 0f 59 15 df 0c 00 	mulsd  0xcdf(%rip),%xmm2        # 20b8 <_IO_stdin_used+0xb8>
    13d8:	00 
    13d9:	66 0f 28 c1          	movapd %xmm1,%xmm0
    13dd:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    13e1:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    13e5:	f2 0f 59 c1          	mulsd  %xmm1,%xmm0
    13e9:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    13ed:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    13f3:	e8 78 fd ff ff       	callq  1170 <__printf_chk@plt>
    13f8:	48 81 fb c8 00 00 00 	cmp    $0xc8,%rbx
    13ff:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    1405:	74 61                	je     1468 <main+0x2a8>
    1407:	49 89 d8             	mov    %rbx,%r8
    140a:	48 89 d9             	mov    %rbx,%rcx
    140d:	48 89 da             	mov    %rbx,%rdx
    1410:	bf 01 00 00 00       	mov    $0x1,%edi
    1415:	48 8d 35 44 0c 00 00 	lea    0xc44(%rip),%rsi        # 2060 <_IO_stdin_used+0x60>
    141c:	b8 01 00 00 00       	mov    $0x1,%eax
    1421:	48 81 eb c8 00 00 00 	sub    $0xc8,%rbx
    1428:	e8 43 fd ff ff       	callq  1170 <__printf_chk@plt>
    142d:	48 8b 3c 24          	mov    (%rsp),%rdi
    1431:	e8 fa fc ff ff       	callq  1130 <bli_obj_free@plt>
    1436:	4c 89 ff             	mov    %r15,%rdi
    1439:	e8 f2 fc ff ff       	callq  1130 <bli_obj_free@plt>
    143e:	4c 89 f7             	mov    %r14,%rdi
    1441:	e8 ea fc ff ff       	callq  1130 <bli_obj_free@plt>
    1446:	4c 89 ef             	mov    %r13,%rdi
    1449:	e8 e2 fc ff ff       	callq  1130 <bli_obj_free@plt>
    144e:	48 89 ef             	mov    %rbp,%rdi
    1451:	e8 da fc ff ff       	callq  1130 <bli_obj_free@plt>
    1456:	4c 89 e7             	mov    %r12,%rdi
    1459:	e8 d2 fc ff ff       	callq  1130 <bli_obj_free@plt>
    145e:	e9 e5 fd ff ff       	jmpq   1248 <main+0x88>
    1463:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1468:	41 b8 c8 00 00 00    	mov    $0xc8,%r8d
    146e:	b9 c8 00 00 00       	mov    $0xc8,%ecx
    1473:	ba c8 00 00 00       	mov    $0xc8,%edx
    1478:	bf 01 00 00 00       	mov    $0x1,%edi
    147d:	48 8d 35 ac 0b 00 00 	lea    0xbac(%rip),%rsi        # 2030 <_IO_stdin_used+0x30>
    1484:	b8 01 00 00 00       	mov    $0x1,%eax
    1489:	e8 e2 fc ff ff       	callq  1170 <__printf_chk@plt>
    148e:	48 8b 3c 24          	mov    (%rsp),%rdi
    1492:	e8 99 fc ff ff       	callq  1130 <bli_obj_free@plt>
    1497:	4c 89 ff             	mov    %r15,%rdi
    149a:	e8 91 fc ff ff       	callq  1130 <bli_obj_free@plt>
    149f:	4c 89 f7             	mov    %r14,%rdi
    14a2:	e8 89 fc ff ff       	callq  1130 <bli_obj_free@plt>
    14a7:	4c 89 ef             	mov    %r13,%rdi
    14aa:	e8 81 fc ff ff       	callq  1130 <bli_obj_free@plt>
    14af:	48 89 ef             	mov    %rbp,%rdi
    14b2:	e8 79 fc ff ff       	callq  1130 <bli_obj_free@plt>
    14b7:	4c 89 e7             	mov    %r12,%rdi
    14ba:	e8 71 fc ff ff       	callq  1130 <bli_obj_free@plt>
    14bf:	31 c0                	xor    %eax,%eax
    14c1:	bf 01 00 00 00       	mov    $0x1,%edi
    14c6:	48 8d 35 5b 0b 00 00 	lea    0xb5b(%rip),%rsi        # 2028 <_IO_stdin_used+0x28>
    14cd:	e8 9e fc ff ff       	callq  1170 <__printf_chk@plt>
    14d2:	48 8b 84 24 f8 03 00 	mov    0x3f8(%rsp),%rax
    14d9:	00 
    14da:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    14e1:	00 00 
    14e3:	75 14                	jne    14f9 <main+0x339>
    14e5:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
    14ec:	31 c0                	xor    %eax,%eax
    14ee:	5b                   	pop    %rbx
    14ef:	5d                   	pop    %rbp
    14f0:	41 5c                	pop    %r12
    14f2:	41 5d                	pop    %r13
    14f4:	41 5e                	pop    %r14
    14f6:	41 5f                	pop    %r15
    14f8:	c3                   	retq   
    14f9:	e8 22 fc ff ff       	callq  1120 <__stack_chk_fail@plt>
    14fe:	66 90                	xchg   %ax,%ax

0000000000001500 <_start>:
    1500:	f3 0f 1e fa          	endbr64 
    1504:	31 ed                	xor    %ebp,%ebp
    1506:	49 89 d1             	mov    %rdx,%r9
    1509:	5e                   	pop    %rsi
    150a:	48 89 e2             	mov    %rsp,%rdx
    150d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1511:	50                   	push   %rax
    1512:	54                   	push   %rsp
    1513:	4c 8d 05 46 01 00 00 	lea    0x146(%rip),%r8        # 1660 <__libc_csu_fini>
    151a:	48 8d 0d cf 00 00 00 	lea    0xcf(%rip),%rcx        # 15f0 <__libc_csu_init>
    1521:	48 8d 3d 98 fc ff ff 	lea    -0x368(%rip),%rdi        # 11c0 <main>
    1528:	ff 15 b2 2a 00 00    	callq  *0x2ab2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    152e:	f4                   	hlt    
    152f:	90                   	nop

0000000000001530 <deregister_tm_clones>:
    1530:	48 8d 3d d9 2a 00 00 	lea    0x2ad9(%rip),%rdi        # 4010 <__TMC_END__>
    1537:	48 8d 05 d2 2a 00 00 	lea    0x2ad2(%rip),%rax        # 4010 <__TMC_END__>
    153e:	48 39 f8             	cmp    %rdi,%rax
    1541:	74 15                	je     1558 <deregister_tm_clones+0x28>
    1543:	48 8b 05 8e 2a 00 00 	mov    0x2a8e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    154a:	48 85 c0             	test   %rax,%rax
    154d:	74 09                	je     1558 <deregister_tm_clones+0x28>
    154f:	ff e0                	jmpq   *%rax
    1551:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1558:	c3                   	retq   
    1559:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001560 <register_tm_clones>:
    1560:	48 8d 3d a9 2a 00 00 	lea    0x2aa9(%rip),%rdi        # 4010 <__TMC_END__>
    1567:	48 8d 35 a2 2a 00 00 	lea    0x2aa2(%rip),%rsi        # 4010 <__TMC_END__>
    156e:	48 29 fe             	sub    %rdi,%rsi
    1571:	48 89 f0             	mov    %rsi,%rax
    1574:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1578:	48 c1 f8 03          	sar    $0x3,%rax
    157c:	48 01 c6             	add    %rax,%rsi
    157f:	48 d1 fe             	sar    %rsi
    1582:	74 14                	je     1598 <register_tm_clones+0x38>
    1584:	48 8b 05 65 2a 00 00 	mov    0x2a65(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    158b:	48 85 c0             	test   %rax,%rax
    158e:	74 08                	je     1598 <register_tm_clones+0x38>
    1590:	ff e0                	jmpq   *%rax
    1592:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1598:	c3                   	retq   
    1599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015a0 <__do_global_dtors_aux>:
    15a0:	f3 0f 1e fa          	endbr64 
    15a4:	80 3d 65 2a 00 00 00 	cmpb   $0x0,0x2a65(%rip)        # 4010 <__TMC_END__>
    15ab:	75 2b                	jne    15d8 <__do_global_dtors_aux+0x38>
    15ad:	55                   	push   %rbp
    15ae:	48 83 3d 42 2a 00 00 	cmpq   $0x0,0x2a42(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    15b5:	00 
    15b6:	48 89 e5             	mov    %rsp,%rbp
    15b9:	74 0c                	je     15c7 <__do_global_dtors_aux+0x27>
    15bb:	48 8b 3d 46 2a 00 00 	mov    0x2a46(%rip),%rdi        # 4008 <__dso_handle>
    15c2:	e8 29 fb ff ff       	callq  10f0 <__cxa_finalize@plt>
    15c7:	e8 64 ff ff ff       	callq  1530 <deregister_tm_clones>
    15cc:	c6 05 3d 2a 00 00 01 	movb   $0x1,0x2a3d(%rip)        # 4010 <__TMC_END__>
    15d3:	5d                   	pop    %rbp
    15d4:	c3                   	retq   
    15d5:	0f 1f 00             	nopl   (%rax)
    15d8:	c3                   	retq   
    15d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015e0 <frame_dummy>:
    15e0:	f3 0f 1e fa          	endbr64 
    15e4:	e9 77 ff ff ff       	jmpq   1560 <register_tm_clones>
    15e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000015f0 <__libc_csu_init>:
    15f0:	f3 0f 1e fa          	endbr64 
    15f4:	41 57                	push   %r15
    15f6:	4c 8d 3d 53 27 00 00 	lea    0x2753(%rip),%r15        # 3d50 <__frame_dummy_init_array_entry>
    15fd:	41 56                	push   %r14
    15ff:	49 89 d6             	mov    %rdx,%r14
    1602:	41 55                	push   %r13
    1604:	49 89 f5             	mov    %rsi,%r13
    1607:	41 54                	push   %r12
    1609:	41 89 fc             	mov    %edi,%r12d
    160c:	55                   	push   %rbp
    160d:	48 8d 2d 44 27 00 00 	lea    0x2744(%rip),%rbp        # 3d58 <__do_global_dtors_aux_fini_array_entry>
    1614:	53                   	push   %rbx
    1615:	4c 29 fd             	sub    %r15,%rbp
    1618:	48 83 ec 08          	sub    $0x8,%rsp
    161c:	e8 df f9 ff ff       	callq  1000 <_init>
    1621:	48 c1 fd 03          	sar    $0x3,%rbp
    1625:	74 1f                	je     1646 <__libc_csu_init+0x56>
    1627:	31 db                	xor    %ebx,%ebx
    1629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1630:	4c 89 f2             	mov    %r14,%rdx
    1633:	4c 89 ee             	mov    %r13,%rsi
    1636:	44 89 e7             	mov    %r12d,%edi
    1639:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    163d:	48 83 c3 01          	add    $0x1,%rbx
    1641:	48 39 dd             	cmp    %rbx,%rbp
    1644:	75 ea                	jne    1630 <__libc_csu_init+0x40>
    1646:	48 83 c4 08          	add    $0x8,%rsp
    164a:	5b                   	pop    %rbx
    164b:	5d                   	pop    %rbp
    164c:	41 5c                	pop    %r12
    164e:	41 5d                	pop    %r13
    1650:	41 5e                	pop    %r14
    1652:	41 5f                	pop    %r15
    1654:	c3                   	retq   
    1655:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    165c:	00 00 00 00 

0000000000001660 <__libc_csu_fini>:
    1660:	f3 0f 1e fa          	endbr64 
    1664:	c3                   	retq   

Disassembly of section .fini:

0000000000001668 <_fini>:
    1668:	f3 0f 1e fa          	endbr64 
    166c:	48 83 ec 08          	sub    $0x8,%rsp
    1670:	48 83 c4 08          	add    $0x8,%rsp
    1674:	c3                   	retq   
